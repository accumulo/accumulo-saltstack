<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

{% set namenode_host = salt['mine.get']('roles:hadoop_master', 'network.interfaces', 'grain').keys()|first() -%}

<configuration>
    <property>
{% if pillar['hadoop_major_version'] == '1' %}
        <name>dfs.name.dir</name>
{% else %}
        <name>dfs.namenode.name.dir</name>
{% endif %}
        <value>{{ pillar.get('hdfs_nn_directories')|join(',') }}</value>
        <final>true</final>
    </property>

    <property>
{% if pillar['hadoop_major_version'] == '1' %}
        <name>dfs.data.dir</name>
{% else %}
        <name>dfs.datanode.data.dir</name>
{% endif %}
        <value>{{ pillar.get('hdfs_dn_directories')|join(',') }}</value>
        <final>true</final>
    </property>

    <property>
{% if pillar['hadoop_major_version'] == '1' %}
        <name>dfs.http-address</name>
{% else %}
        <name>dfs.datanode.http-address</name>
{% endif %}
        <value>{{ namenode_host }}:{{ pillar.get('namenode_http_port') }}</value>
        <final>true</final>
    </property>

    <property>
{% if pillar['hadoop_major_version'] == '1' %}
        <name>dfs.secondary.http-address</name>
{% else %}
        <name>dfs.secondary.datanode.http-address</name>
{% endif %}
        <value>{{ namenode_host }}:{{ pillar.get('secondarynamenode_http_port') }}</value>
        <final>true</final>
    </property>

{% if pillar.get('hadoopconf-hdfs-site') %}
{% for name, dict in pillar.get('hadoopconf-hdfs-site').items() %}
    <property>
        <name>{{ name }}</name>
        {% for key, value in dict.iteritems() %}<{{ key }}>{{ value }}</{{key}}>{% endfor %}
    </property>
{% endfor -%}
{% endif -%}

</configuration>
